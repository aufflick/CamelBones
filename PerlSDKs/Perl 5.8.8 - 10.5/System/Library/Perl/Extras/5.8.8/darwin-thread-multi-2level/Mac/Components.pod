=head1 NAME

Mac::Components - Macintosh Toolbox Interface to the Components Manager

=head1 SYNOPSIS

	use Mac::Components;
	RegisterComponentResource($Resource, 1);
	OpenComponent($Component);
	CloseComponent($Component);

=head1 DESCRIPTION

=head2 Constants

=over 4

=item kAppleManufacturer

=item kComponentResourceType

=item kAnyComponentType

=item kAnyComponentSubType

=item kAnyComponentManufacturer

=item kAnyComponentFlagsMask

Default values for C<GetDefaultComponent()>.

=item defaultComponentIdentical

=item defaultComponentAnyFlags

=item defaultComponentAnyManufacturer

=item defaultComponentAnySubType

=item defaultComponentAnyFlagsAnyManufacturer

=item defaultComponentAnyFlagsAnyManufacturerAnySubType

Flags for C<GetDefaultComponent()>.

=item kComponentOpenSelect

=item kComponentCloseSelect

=item kComponentCanDoSelect

=item kComponentVersionSelect

=item kComponentRegisterSelect

=item kComponentTargetSelect

=item kComponentUnregisterSelect

Standard component selectors.

=item registerComponentGlobal

=item registerComponentNoDuplicates

=item registerComponentAfterExisting

Flags for C<SetDefaultComponent()>.

=back

=head2 Functions

=over 4

=item RegisterComponentResource TR, GLOBAL

The RegisterComponentResource function makes a component available for use by
applications (or other clients). Once the Component Manager has registered a
component, applications can find and open the component using the standard
Component Manager routines. You provide information identifying the component and
specifying its capabilities. The Component Manager returns a component identifier
that uniquely identifies the component to the system.

=item UnregisterComponent ACOMPONENT

The UnregisterComponent function removes a component from the Component Manager’s
registration list. Most components are registered at startup and remain
registered until the computer is shut down. However, you may want to provide some
services temporarily. In that case you dispose of the component that provides the
temporary service by using this function.
Returns zero on failure.

=item FindNextComponent ACOMPONENT, [COMPONENTTYPE, [COMPONENTSUBTYPE, [COMPONENTMANUFACTURER, [COMPONENTFLAGS, [COMPONENTFLAGSMASK]]]]]

The FindNextComponent function returns the component identifier of a component
that meets the search criteria. FindNextComponent returns a function result of 0
when there are no more matching components. 

=item CountComponents [COMPONENTTYPE, [COMPONENTSUBTYPE, [COMPONENTMANUFACTURER, [COMPONENTFLAGS, [COMPONENTFLAGSMASK]]]]]

The CountComponents function returns a long integer containing the number of
components that meet the specified search criteria.

=item GetComponentInfo ACOMPONENT

The GetComponentInfo function returns information about the specified component.

	($type, $subtype, $manufacturer, $flags, $mask, $name, $info) =
		GetComponentInfo($Component);

=item GetComponentListModSeed

The GetComponentListModSeed function allows you to determine if the list of
registered components has changed. This function returns the value of the
component registration seed number.

=item OpenComponent ACOMPONENT

The OpenComponent function allows your application to gain access to the services
provided by a component. Your application must open a component before it can
call any component functions. You specify the component with a component
identifier that your application previously obtained from the FindNextComponent
function.
Returns ComponentInstance.

=item CloseComponent ACOMPONENTINSTANCE

The CloseComponent function terminates your application’s access to the services
provided by a component. Your application specifies the connection to be closed
with the component instance returned by the OpenComponent() or OpenDefaultComponent()
function.
Returns zero on failure.

=item GetComponentInstanceError ACOMPONENTINSTANCE

The GetComponentInstanceError function returns the last error generated by a
specific connection to a component.
Returns zero on failure.

=item ComponentFunctionImplemented CI, FTNNUMBER

The ComponentFunctionImplemented function allows you to determine whether a
component supports a specified request. Your application can use this function to
determine a component’s capabilities. 
Returns 1 if supported.

=item GetComponentVersion CI

The GetComponentVersion function returns a component’s version number
as a coded integer.

=item SetDefaultComponent ACOMPONENT, FLAGS

The SetDefaultComponent function allows your component to change the search order
for registered components. You specify a component that is to be placed at the
front of the search chain, along with control information that governs the
reordering operation. The order of the search chain influences which component
the Component Manager selects in response to an application’s use of the
OpenDefaultComponent() and FindNextComponent() functions.
Returns zero on failure.

=item OpenDefaultComponent COMPONENTTYPE, [COMPONENTSUBTYPE]

The OpenDefaultComponent function allows your application to gain access to the
services provided by a component. Your application must open a component before
it can call any component functions. You specify the component type and subtype
values of the component to open. The Component Manager searches for a component
that meets those criteria. If you want to exert more control over the selection
process, you can use the FindNextComponent() and OpenComponent() functions.
Returns ComponentInstance.

=item RegisterComponentResourceFile RESREFNUM, GLOBAL

The RegisterComponentResourceFile function registers all component resources in
the given resource file according to the flags specified in the global parameter.
Returns an integer value.

=back



=head1 AUTHOR

Written by Matthias Ulrich Neeracher E<lt>neeracher@mac.comE<gt>,
documentation by Bob Dalgleish E<lt>bob.dalgleish@sasknet.sk.caE<gt>.
Currently maintained by Chris Nandor E<lt>pudge@pobox.comE<gt>.

