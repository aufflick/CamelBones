# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs.  It is not useful on other systems.
# If it contains results you don't want to keep, you may remove or edit it.
#
# By default, configure uses ./config.cache as the cache file,
# creating it if it does not exist already.  You can give configure
# the --cache-file=FILE option to use a different cache file; that is
# what configure does when it calls configure scripts in
# subdirectories, so they share the cache.
# Giving --cache-file=/dev/null disables caching, for debugging configure.
# config.status only pays attention to the cache file if you give it the
# --recheck option to rerun configure.
#
: ${ac_cv_c_char_unsigned='no'}
: ${ac_cv_c_cross='no'}
: ${ac_cv_func_mmap='yes'}
: ${ac_cv_func_mprotect='no'}
: ${ac_cv_header_stdc='yes'}
: ${ac_cv_header_stdlib_h='yes'}
: ${ac_cv_header_sys_file_h='yes'}
: ${ac_cv_header_sys_ipc_h='yes'}
: ${ac_cv_header_sys_mman_h='yes'}
: ${ac_cv_header_sys_shm_h='yes'}
: ${ac_cv_header_unistd_h='yes'}
: ${ac_cv_prog_CC='cc -Aa -O'}
: ${ac_cv_prog_CPP='cc -Aa -O -E'}
: ${ac_cv_prog_RANLIB='ranlib'}
: ${ac_cv_prog_gcc='no'}
: ${ac_cv_prog_make_make_set='yes'}
: ${ac_cv_type_size_t='yes'}
: ${cl_cv_c_return_void='no'}
: ${cl_cv_c_struct_return_small='yes'}
: ${cl_cv_c_struct_return_static='no'}
: ${cl_cv_c_void='yes'}
: ${cl_cv_codeexec='guessing yes'}
: ${cl_cv_decl_O_RDWR_fcntl_h='no'}
: ${cl_cv_func_getpagesize='no'}
: ${cl_cv_func_mmap_works='no'}
: ${cl_cv_func_vm='no'}
: ${cl_cv_header_stdc='yes'}
: ${cl_cv_host='hppa1.0-hp-hpux8.00'}
: ${cl_cv_path_install='cp'}
: ${cl_cv_prog_as_underscore='no'}
: ${cl_cv_proto_abort='extern void abort (void);'}
: ${cl_cv_proto_abort_ret='void'}
: ${cl_cv_proto_abort_vol=''}
: ${cl_cv_proto_free='extern void free (void*);'}
: ${cl_cv_proto_free_ret='void'}
: ${cl_cv_proto_malloc='extern void* malloc (unsigned int);'}
: ${cl_cv_proto_malloc_arg1='unsigned int'}
: ${cl_cv_proto_malloc_ret='void*'}
: ${cl_cv_proto_mmap='extern void* mmap (, , int, int, int, off_t);'}
: ${cl_cv_proto_mmap_ret='void*'}
: ${cl_cv_proto_shmat='extern void* shmat (int, void*, int);'}
: ${cl_cv_proto_shmat_arg2=''}
: ${cl_cv_proto_shmat_ret='void*'}
: ${cl_cv_proto_shmctl='extern int shmctl (int, int, struct shmid_ds *);'}
: ${cl_cv_proto_shmctl_args='int, int, struct shmid_ds *'}
: ${cl_cv_proto_shmctl_dots='no'}
: ${cl_cv_proto_shmget='extern int shmget (key_t, size_t, int);'}
: ${cl_cv_proto_shmget_arg2='size_t'}
: ${cl_cv_sys_shm_works='no'}
