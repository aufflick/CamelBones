# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs.  It is not useful on other systems.
# If it contains results you don't want to keep, you may remove or edit it.
#
# By default, configure uses ./config.cache as the cache file,
# creating it if it does not exist already.  You can give configure
# the --cache-file=FILE option to use a different cache file; that is
# what configure does when it calls configure scripts in
# subdirectories, so they share the cache.
# Giving --cache-file=/dev/null disables caching, for debugging configure.
# config.status only pays attention to the cache file if you give it the
# --recheck option to rerun configure.
#
ac_cv_c_char_unsigned=${ac_cv_c_char_unsigned=no}
ac_cv_func_mprotect=${ac_cv_func_mprotect=no}
ac_cv_header_sys_file_h=${ac_cv_header_sys_file_h=yes}
ac_cv_header_sys_mman_h=${ac_cv_header_sys_mman_h=no}
ac_cv_header_sys_shm_h=${ac_cv_header_sys_shm_h=no}
ac_cv_header_unistd_h=${ac_cv_header_unistd_h=yes}
ac_cv_path_LD=${ac_cv_path_LD=/boot/develop/tools/gnupro/bin/ld}
ac_cv_path_NM=${ac_cv_path_NM='/boot/develop/tools/gnupro/bin/nm -B'}
ac_cv_path_install=${ac_cv_path_install='/bin/install -c'}
ac_cv_prog_CC=${ac_cv_prog_CC='gcc -O'}
ac_cv_prog_CPP=${ac_cv_prog_CPP='gcc -O -E -w'}
ac_cv_prog_RANLIB=${ac_cv_prog_RANLIB=ranlib}
ac_cv_prog_cc_cross=${ac_cv_prog_cc_cross=no}
ac_cv_prog_cc_works=${ac_cv_prog_cc_works=yes}
ac_cv_prog_gcc=${ac_cv_prog_gcc=yes}
ac_cv_prog_gcc_traditional=${ac_cv_prog_gcc_traditional=no}
ac_cv_prog_gnu_ld=${ac_cv_prog_gnu_ld=yes}
ac_cv_prog_make_make_set=${ac_cv_prog_make_make_set=yes}
cl_cv_c_float_return_ireg=${cl_cv_c_float_return_ireg=no}
cl_cv_c_longlong=${cl_cv_c_longlong=yes}
cl_cv_c_return_void=${cl_cv_c_return_void=yes}
cl_cv_c_struct_return_small=${cl_cv_c_struct_return_small=no}
cl_cv_c_struct_return_static=${cl_cv_c_struct_return_static=no}
cl_cv_c_void=${cl_cv_c_void=yes}
cl_cv_codeexec=${cl_cv_codeexec=yes}
cl_cv_decl_O_RDWR_fcntl_h=${cl_cv_decl_O_RDWR_fcntl_h=yes}
cl_cv_func_getpagesize=${cl_cv_func_getpagesize=no}
cl_cv_func_vm=${cl_cv_func_vm=no}
cl_cv_header_stdc=${cl_cv_header_stdc=yes}
cl_cv_host=${cl_cv_host=i586-pc-beos}
cl_cv_path_install=${cl_cv_path_install=cp}
cl_cv_prog_LN=${cl_cv_prog_LN='cp -p'}
cl_cv_prog_LN_S=${cl_cv_prog_LN_S='ln -s'}
cl_cv_prog_as_underscore=${cl_cv_prog_as_underscore=no}
cl_cv_prog_cc_gcc=${cl_cv_prog_cc_gcc=yes}
cl_cv_prog_cp=${cl_cv_prog_cp='cp -p'}
cl_cv_proto_abort=${cl_cv_proto_abort='extern void abort (void);'}
cl_cv_proto_abort_ret=${cl_cv_proto_abort_ret=void}
cl_cv_proto_abort_vol=${cl_cv_proto_abort_vol=}
cl_cv_proto_free=${cl_cv_proto_free='extern void free (void*);'}
cl_cv_proto_free_ret=${cl_cv_proto_free_ret=void}
cl_cv_proto_malloc=${cl_cv_proto_malloc='extern void* malloc (size_t);'}
cl_cv_proto_malloc_arg1=${cl_cv_proto_malloc_arg1=size_t}
cl_cv_proto_malloc_ret=${cl_cv_proto_malloc_ret='void*'}
cl_cv_proto_open=${cl_cv_proto_open='extern int open (const char*, int, ...);'}
cl_cv_proto_open_arg1=${cl_cv_proto_open_arg1=const}
cl_cv_proto_open_args=${cl_cv_proto_open_args='const char*, int, ...'}
cl_cv_proto_open_dots=${cl_cv_proto_open_dots=yes}
